Software setup / Sagteware-opstelling
Context: In this course, we will use Python 3.8.10 in a virtual environment to ensure the required software is available.  We assume the use of vim as a code editor, and that Windows users are using Powershell, rather than the default command prompt. You should be able to install vim and set up a similar virtual environment on any other computers you work on as well, ensuring that the code you develop at home works in FIRGA and vice versa.  In general below, we explain what we are trying to do, and try to accompany it by more specific details for Windows users.

The situation in FIRGA: Various versions of Python are installed in FIRGA, and they can be run with the command "py".  To see this, launch Powershell. Running "py -0p" lists the various Python versions, and you will see Python 3.8 is installed, but not the default.  To run Python 3.8, you can issue the command "py -3.8".  Unfortunately, the Python 3.8 install on FIRGA does not include all the packages required to use the booksite library, and if you install them on one computer in the lab, the installation does not persist to other computers in FIRGA.  To address this, and to create a setup you can replicate at home, we have set up a virtual Python environment on the J: drive at "J:\EE\RW E214\venvs\3.8.10".  This includes Python 3.8.10 as well as slightly updated versions of the booksite libraries to address some issues introduced with later Python and Python library versions.

Activation and deactivation: To use a Python virtual environment, it is necessary to activate it by running a script.  When one no longer wishes to work in the environment, one can deactivate it.  To run the script, navigate to the folder containing the virtual environment in Powershell, and then issue the instruction "./Scripts/Activate.ps1".  This will change the command prompt, which should now show "(3.8.10) " at the start of the line to indicate that is the current virtual environment.  You can deactivate at any point by running the command "deactivate".  Inside the virtual environment, you access the Python version for the virtual environment with the command "python".  You need to activate and deactivate the virtual environment for each shell window that you open.

To check that things are working: once you have activated the virtual environment, try running the following command in PowerShell: "python -c "import stddraw; stddraw.square(0.5, 0.5, 0.2); stddraw.show(1000)".  This should cause a new window to pop up for a second, showing a square drawn on a white background.

Vim: For editing files, you will use vim.  You can edit your files in your Powershell window by running vim as a command in Powershell, specifying the file you want to edit as a command-line argument, e.g. "vim hello.py".  vim has a steep learning curve, but it is a valuable tool to master.  The traditional introduction to vim is vimtutor - see https://superuser.com/questions/270938/how-to-run-vimtutor-on-windows for an indication of how to access this, although it will depend on the details of your installation.

Note: Rather use your H: network drive (or a flash drive/external hard drive) than your user profile on the C:-drive for creating and storing your code and data in the module, so that you can more easily move between computers in FIRGA and elsewhere.

Your own computer(s): To set things up at home, you will want to make use of the file at "J:\EE\RW E214\venvs\3.8.10-requirements.txt".  Save it to a flash drive or email it to yourself so you have it available.

The setup at home should then involve the following steps:

(a) Downloading and installing Python 3.8.10 for your platform.  (For Windows, go to the Python website's downloads page at https://www.python.org/downloads/windows/ , search for "3.8.10", and choose the appropriate format to download - typically this would be the 64-bit Windows installer).  You can use a user install if you don't have administrator access on the computer. When installing on Windows, uncheck the "add to launcher for all users" and "add python 3.8 to path" options.  Once you have installed it, ensure you know how to run that specific version of Python on the command line (e.g. "py -3.8" on Windows).

(b) Create a folder for your virtual environment, and then create a virtual environment there using Python3.8.10.  Suppose you have a folder, say "CSE214", for your code in this module, and you wish to create the virtual environment in a subfolder "3.8.10".  First create the subfolder, next navigate to that folder in Powershell, and then issue a command like "py -3.8 -m venv .", where "py -3.8" is the command to run Python 3.8.10.

(c) Activate the virtual environment.  In Powershell, this would be "./Scripts/Activate.ps1".  Verify the prompt updates to show the virtual environment is activated.

(d) Install the requirements for the virtual environment file from the 3.8.10-requirements.txt file.  For this, copy 3.8.10-requirements.txt into the virtual environment folder, and then run the command "python -m pip install -r 3.8.10-requirements.txt".

(e) Test the install as on FIRGA:  "python -c "import stddraw; stddraw.square(0.5, 0.5, 0.2); stddraw.show(1000)".

(f) Install vim. For Windows, use the current stable version, which can be obtained from https://www.vim.org/download.php .

Note: this is the first year we are using virtual environments to manage dependencies, as well as using pip to install the booksite libraries.  We also don't have access to the variety of setups all of you do together at home.  As such, it is inevitable there will be some teething problems getting things set up, despite our efforts to simplify and standardize things. If you have issues with a laptop you can bring to FIRGA, please bring it to a tutorial session so we can try resolve the issue and find out whether/how we should update the libraries/instructions.  If you can't bring it to FIRGA, please post on the discussion forum and we can try to take it further from there.  Note that if you don't get things set up exactly correctly, most things should still work at home with a variety of Python versions and the booksite's original standard library files pasted in the same folder as your code.  However, the setup in the virtual environment in FIRGA does address some issues, and is the reference environment for testing practical test and project submissions, so it is good to get it working.